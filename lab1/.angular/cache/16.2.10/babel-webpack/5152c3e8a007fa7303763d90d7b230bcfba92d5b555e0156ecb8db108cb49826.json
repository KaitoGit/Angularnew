{"ast":null,"code":"// 导入产品模型和数据\nimport { products } from '../products';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction ProductDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.product.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, ctx_r0.product.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.product.description);\n  }\n}\nexport class ProductDetailsComponent {\n  // 构造函数，注入 ActivatedRoute 以获取路由信息\n  constructor(route) {\n    this.route = route;\n  }\n  // 初始化方法，当组件被创建时自动调用\n  ngOnInit() {\n    // 从当前路由获取产品ID\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n    // 在产品数组中查找与路由参数中的ID匹配的产品\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n  static #_ = this.ɵfac = function ProductDetailsComponent_Factory(t) {\n    return new (t || ProductDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductDetailsComponent,\n    selectors: [[\"app-product-details\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function ProductDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Product Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ProductDetailsComponent_div_2_Template, 8, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.product);\n      }\n    },\n    dependencies: [i2.NgIf, i2.CurrencyPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["products","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","product","name","ɵɵpipeBind1","price","description","ProductDetailsComponent","constructor","route","ngOnInit","routeParams","snapshot","paramMap","productIdFromRoute","Number","get","find","id","_","ɵɵdirectiveInject","i1","ActivatedRoute","_2","selectors","decls","vars","consts","template","ProductDetailsComponent_Template","rf","ctx","ɵɵtemplate","ProductDetailsComponent_div_2_Template","ɵɵproperty"],"sources":["E:\\personal\\Angular\\lab1\\src\\app\\product-details\\product-details.component.ts","E:\\personal\\Angular\\lab1\\src\\app\\product-details\\product-details.component.html"],"sourcesContent":["// 导入所需的模块和类\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// 导入产品模型和数据\nimport { Product, products } from '../products';\n\n@Component({\n  selector: 'app-product-details', // 组件选择器，用于在HTML中标识组件位置\n  templateUrl: './product-details.component.html', // 组件的HTML模板文件路径\n  styleUrls: ['./product-details.component.css'] // 组件的CSS样式文件路径\n})\nexport class ProductDetailsComponent implements OnInit {\n  product: Product | undefined; // 存储当前产品信息的属性\n\n  // 构造函数，注入 ActivatedRoute 以获取路由信息\n  constructor(private route: ActivatedRoute) { }\n\n  // 初始化方法，当组件被创建时自动调用\n  ngOnInit() {\n    // 从当前路由获取产品ID\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n\n    // 在产品数组中查找与路由参数中的ID匹配的产品\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n}\n","<h2>Product Details</h2>\n\n<div *ngIf=\"product\">\n  <h3>{{ product.name }}</h3>\n  <h4>{{ product.price | currency }}</h4>\n  <p>{{ product.description }}</p>\n</div>"],"mappings":"AAIA;AACA,SAAkBA,QAAQ,QAAQ,aAAa;;;;;;ICH/CC,EAAA,CAAAC,cAAA,UAAqB;IACfD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA8B;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAF5BH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAC,IAAA,CAAkB;IAClBR,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAS,WAAA,OAAAH,MAAA,CAAAC,OAAA,CAAAG,KAAA,EAA8B;IAC/BV,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAI,WAAA,CAAyB;;;ADO9B,OAAM,MAAOC,uBAAuB;EAGlC;EACAC,YAAoBC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;EAAoB;EAE7C;EACAC,QAAQA,CAAA;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ;IAChD,MAAMC,kBAAkB,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D;IACA,IAAI,CAACd,OAAO,GAAGR,QAAQ,CAACuB,IAAI,CAACf,OAAO,IAAIA,OAAO,CAACgB,EAAE,KAAKJ,kBAAkB,CAAC;EAC5E;EAAC,QAAAK,CAAA,G;qBAdUZ,uBAAuB,EAAAZ,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBhB,uBAAuB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZpCnC,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAExBH,EAAA,CAAAqC,UAAA,IAAAC,sCAAA,iBAIM;;;QAJAtC,EAAA,CAAAI,SAAA,GAAa;QAAbJ,EAAA,CAAAuC,UAAA,SAAAH,GAAA,CAAA7B,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}