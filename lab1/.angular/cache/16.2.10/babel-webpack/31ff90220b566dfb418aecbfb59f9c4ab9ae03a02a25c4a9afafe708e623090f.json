{"ast":null,"code":"// ng generate component product-alerts\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ProductAlertsComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\")(1, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ProductAlertsComponent_p_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.notify.emit());\n    });\n    i0.ɵɵtext(2, \"Notify Me\");\n    i0.ɵɵelementEnd()();\n  }\n}\n// 中的主要功能如下：\n// selector（app-product-alerts）用于标识组件。按照惯例，Angular 组件选择器以前缀 app- 开头，后跟组件名称。\n// 模板和样式文件名引用了组件的 HTML 和 CSS。\n// 这个 @Component() 定义还导出了类 ProductAlertsComponent，该类会处理组件的功能。\nexport class ProductAlertsComponent {\n  constructor() {\n    this.notify = new EventEmitter();\n  }\n  static #_ = this.ɵfac = function ProductAlertsComponent_Factory(t) {\n    return new (t || ProductAlertsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductAlertsComponent,\n    selectors: [[\"app-product-alerts\"]],\n    inputs: {\n      product: \"product\"\n    },\n    outputs: {\n      notify: \"notify\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function ProductAlertsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ProductAlertsComponent_p_0_Template, 3, 0, \"p\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.product && ctx.product.price > 700);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","ProductAlertsComponent_p_0_Template_button_click_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","notify","emit","ɵɵtext","ɵɵelementEnd","ProductAlertsComponent","constructor","_","_2","selectors","inputs","product","outputs","decls","vars","consts","template","ProductAlertsComponent_Template","rf","ctx","ɵɵtemplate","ProductAlertsComponent_p_0_Template","ɵɵproperty","price"],"sources":["E:\\personal\\Angular\\lab1\\src\\app\\product-alerts\\product-alerts.component.ts","E:\\personal\\Angular\\lab1\\src\\app\\product-alerts\\product-alerts.component.html"],"sourcesContent":["// ng generate component product-alerts\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Product } from '../products';\n\n@Component({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css'],\n})\n// 中的主要功能如下：\n\n// selector（app-product-alerts）用于标识组件。按照惯例，Angular 组件选择器以前缀 app- 开头，后跟组件名称。\n\n// 模板和样式文件名引用了组件的 HTML 和 CSS。\n\n// 这个 @Component() 定义还导出了类 ProductAlertsComponent，该类会处理组件的功能。\nexport class ProductAlertsComponent {\n  @Input() product: Product | undefined;\n  @Output() notify = new EventEmitter();\n}\n","<p *ngIf=\"product && product.price > 700\">\n  <button type=\"button\" (click)=\"notify.emit()\">Notify Me</button>\n</p>\n"],"mappings":"AAAA;AACA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;ICDtEC,EAAA,CAAAC,cAAA,QAA0C;IAClBD,EAAA,CAAAE,UAAA,mBAAAC,4DAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,MAAA,CAAAC,IAAA,EAAa;IAAA,EAAC;IAACV,EAAA,CAAAW,MAAA,gBAAS;IAAAX,EAAA,CAAAY,YAAA,EAAS;;;ADQlE;AAEA;AAEA;AAEA;AACA,OAAM,MAAOC,sBAAsB;EAZnCC,YAAA;IAcY,KAAAL,MAAM,GAAG,IAAIV,YAAY,EAAE;;EACtC,QAAAgB,CAAA,G;qBAHYF,sBAAsB;EAAA;EAAA,QAAAG,EAAA,G;UAAtBH,sBAAsB;IAAAI,SAAA;IAAAC,MAAA;MAAAC,OAAA;IAAA;IAAAC,OAAA;MAAAX,MAAA;IAAA;IAAAY,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBnC1B,EAAA,CAAA4B,UAAA,IAAAC,mCAAA,eAEI;;;QAFA7B,EAAA,CAAA8B,UAAA,SAAAH,GAAA,CAAAR,OAAA,IAAAQ,GAAA,CAAAR,OAAA,CAAAY,KAAA,OAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}