{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.items = []; // 存储购物车中的产品项的数组\n  }\n  // 将产品添加到购物车的方法\n  addToCart(product) {\n    this.items.push(product);\n  }\n  // 获取购物车中的所有产品项的方法\n  getItems() {\n    return this.items;\n  }\n  // 清空购物车的方法\n  clearCart() {\n    this.items = []; // 将购物车中的数组重置为空数组\n    return this.items; // 返回清空后的空数组\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root' // 标记此服务为根级注入，可在整个应用中共享\n  });\n}","map":{"version":3,"names":["CartService","constructor","items","addToCart","product","push","getItems","clearCart","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\personal\\Angular\\lab1\\src\\app\\cart.service.ts"],"sourcesContent":["// 导入 Product 类，它用于表示购物车中的产品项\nimport { Product } from './products';\n\n// 导入 Injectable 装饰器，用于标记该服务可被依赖注入\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root' // 标记此服务为根级注入，可在整个应用中共享\n})\nexport class CartService {\n  items: Product[] = []; // 存储购物车中的产品项的数组\n\n  // 将产品添加到购物车的方法\n  addToCart(product: Product) {\n    this.items.push(product);\n  }\n\n  // 获取购物车中的所有产品项的方法\n  getItems() {\n    return this.items;\n  }\n\n  // 清空购物车的方法\n  clearCart() {\n    this.items = []; // 将购物车中的数组重置为空数组\n    return this.items; // 返回清空后的空数组\n  }\n}\n"],"mappings":";AASA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIE,KAAAC,KAAK,GAAc,EAAE,CAAC,CAAC;;EAEvB;EACAC,SAASA,CAACC,OAAgB;IACxB,IAAI,CAACF,KAAK,CAACG,IAAI,CAACD,OAAO,CAAC;EAC1B;EAEA;EACAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,KAAK;EACnB;EAEA;EACAK,SAASA,CAAA;IACP,IAAI,CAACL,KAAK,GAAG,EAAE,CAAC,CAAC;IACjB,OAAO,IAAI,CAACA,KAAK,CAAC,CAAC;EACrB;EAAC,QAAAM,CAAA,G;qBAjBUR,WAAW;EAAA;EAAA,QAAAS,EAAA,G;WAAXT,WAAW;IAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;IAAAC,UAAA,EAFV,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}